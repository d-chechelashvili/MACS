#include <bits/stdc++.h>

using namespace std;

int isPalindrome(string s, int index) {
  s.erase(index, 1);
  for (int i = 0; i < s.length()/2 +1; i++) {
    if (s[i] != s[s.length() - 1 - i]) return -1;
  }
  return index;
}

// Complete the palindromeIndex function below.
int palindromeIndex(string s) {
    for(int i = 0; i < s.length(); i++) {
        if(s[i] != s[s.length() - 1 - i]){
            return max(isPalindrome(s,i),isPalindrome(s,s.length()-1-i));
        }
    }
    return -1;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        int result = palindromeIndex(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}